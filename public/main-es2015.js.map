{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/loading/loading.component.ts","./src/app/components/loading/loading.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/post-grid/post-grid.component.ts","./src/app/components/post-grid/post-grid.component.html","./src/app/components/post-item/post-item.component.ts","./src/app/components/post-item/post-item.component.html","./src/app/models/Post.ts","./src/app/services/auth.service.ts","./src/app/services/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from \"./components/about/about.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { HomePageComponent } from \"./components/home-page/home-page.component\";\n\n\nconst routes: Routes = [{path: '',component: HomePageComponent},\n{path: 'dashboard/:id/:token',component: HomeComponent},\n{path: 'about/:id/:token',component: AboutComponent},\n{path: '*',redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div>\n  <router-outlet></router-outlet>\n  <app-footer [ngClass]=\"{'footer-home': true}\"></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { PostGridComponent } from './components/post-grid/post-grid.component';\nimport { PostItemComponent } from './components/post-item/post-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    AuthComponent,\n    FooterComponent,\n    HomeComponent,\n    HomePageComponent,\n    LoadingComponent,\n    NavbarComponent,\n    PostGridComponent,\n    PostItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  userLoggedIn: boolean;\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private route: ActivatedRoute,private router: Router) { }\n\n  ngOnInit(): void {\n    if(this.route.snapshot.paramMap.get('id').length < 2){\n      this.userLoggedIn = false;\n    }else{\n      this.userLoggedIn = true;\n      this.appUserId = this.route.snapshot.paramMap.get('id');\n      this.token = this.route.snapshot.paramMap.get('token');\n    }\n  }\n\n  //this function clears everything if the user clicks logout in the nav bar\n  checkStatus(value){\n    if(value === 'true'){\n      this.userLoggedIn = false;\n      this.appUserId = '';\n      this.token = '';\n\n      //redirect to the home page\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div>\n    <app-navbar (logoutStatus)=\"checkStatus($event)\" [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <header [ngClass]=\"{'about-header': true}\">\n        <h1 [ngClass]=\"{'about-title': true}\">About</h1>\n    </header>\n    <p [ngClass]=\"{'about-body': true}\">Grid Post is a web app that lets users see posts they make in a grid format.</p>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  @Output() idToEmit: EventEmitter<any> = new EventEmitter();\n  @Output() idWithPosts: EventEmitter<any> = new EventEmitter();\n\n  alreadyUser: boolean;\n  loadingData: boolean;\n\n  //references to form input fields\n\n  //login form\n  loginEmail: string;\n  loginPassword: string;\n\n  //register form\n  registerName: string;\n  registerEmail: string;\n  registerPassword: string;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    //this is true by default to show the login form first\n    this.alreadyUser = true;\n    this.loadingData = false;\n  }\n\n  onLoginSubmit(loginData){\n    //set the data to an object and call the logUserIn authService method\n    if(loginData.loginEmail && loginData.loginPassword){\n      //set the data to an object and call the logUserIn authService method\n      const loginObj = {\n        email: loginData.loginEmail,\n        password: loginData.loginPassword\n      }\n\n      const loginJson = JSON.stringify(loginObj);\n      this.loadingData = true;\n      this.authService.logUserIn(loginJson)\n        .subscribe(resObj => {\n          //emit the id up to the home component\n          this.idWithPosts.emit(resObj);\n          this.loadingData = false;\n        });\n    }\n  }\n\n  onRegisterSubmit(registerData){\n    //set the data to an object and call the uploadRegisterUser authService method\n    const registerObj = {\n      name: registerData.registerName,\n      email: registerData.registerEmail,\n      password: registerData.registerPassword\n    };\n\n    const registerJson = JSON.stringify(registerObj);\n    this.loadingData = true;\n    this.authService.uploadRegisterUser(registerJson)\n      .subscribe(resObj => {\n        //emit the id up to the home component\n        this.idToEmit.emit(resObj);\n        this.loadingData = false;\n      });\n  }\n\n  switchForms(){\n    //toggles the alreadyUser boolean to switch the login and register forms via user click\n    this.alreadyUser = !this.alreadyUser;\n  }\n\n}\n","<div>\n    <div [ngClass]=\"{'app-form-container': true}\" *ngIf=\"alreadyUser; else newUser\">\n        <h2 [ngStyle]=\"{'text-align': 'center','color': '#000000','margin-bottom': '0.8rem'}\">Login</h2>\n        <!--login form-->\n        <form #userLogin=\"ngForm\" method=\"POST\" (ngSubmit)=\"onLoginSubmit(userLogin.value)\" [ngClass]=\"{'app-form': true}\">\n            <input type=\"email\" name=\"loginEmail\" [(ngModel)]=\"loginEmail\"\n                placeholder=\"Email\" [ngClass]=\"{'app-form-input': true}\">\n\n             <input type=\"password\" name=\"loginPassword\" [(ngModel)]=\"loginPassword\"\n                placeholder=\"Password\" [ngClass]=\"{'app-form-input': true}\">\n\n            <button type=\"submit\" [ngClass]=\"{'app-form-button': true}\">Login</button>\n        </form>\n        <button #registerButton (click)=\"switchForms()\" [ngClass]=\"{'app-form-button-register': true}\">Register</button>\n    </div>\n    <ng-template #newUser>\n        <div [ngClass]=\"{'app-form-container': true}\">\n            <h2 [ngStyle]=\"{'text-align': 'center','color': '#000000','margin-bottom': '0.8rem'}\">Register</h2>\n            <!--register form-->\n            <form #userRegister=\"ngForm\" method=\"POST\" (ngSubmit)=\"onRegisterSubmit(userRegister.value)\" [ngClass]=\"{'app-form': true}\">\n                <input type=\"text\" name=\"registerName\" [(ngModel)]=\"registerName\"\n                    placeholder=\"First Name\" [ngClass]=\"{'app-form-input': true}\">\n\n                <input type=\"email\" name=\"registerEmail\" [(ngModel)]=\"registerEmail\"\n                    placeholder=\"Email\" [ngClass]=\"{'app-form-input': true}\">\n\n                <input type=\"password\" name=\"registerPassword\" [(ngModel)]=\"registerPassword\"\n                    placeholder=\"Password\" [ngClass]=\"{'app-form-input': true}\">\n\n                <button type=\"submit\" [ngClass]=\"{'app-form-button': true}\">Register</button>\n            </form>\n            <button (click)=\"switchForms()\" [ngClass]=\"{'app-form-button-login': true}\">Login</button>\n        </div>\n    </ng-template>\n    <app-loading [loadingData]=\"loadingData\" [ngStyle]=\"{'margin-top': '0.8rem'}\"></app-loading>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer [ngClass]=\"{'footer': true}\">\n    <p [ngClass]=\"{'footer-text': true}\">&copy; Jamar</p>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  appUserId: string = '';\n  token: string = '';\n  userLoggedIn: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <app-navbar [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <h1 [ngClass]=\"{'home-page': true}\">Welcome to the home page!</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Post} from '../../models/Post';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userLoggedIn: boolean;\n  userPosts: Post[];\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private route: ActivatedRoute,private postService: PostService) { }\n\n  ngOnInit(): void {\n    if(this.route.snapshot.paramMap.get('id') !== undefined){\n      if(this.route.snapshot.paramMap.get('id').length < 2){\n        this.userLoggedIn = false;\n      }else{\n        this.userLoggedIn = true;\n        this.appUserId = this.route.snapshot.paramMap.get('id');\n        this.token = this.route.snapshot.paramMap.get('token');\n\n        //retrieve the posts\n        this.retrieveThePosts(this.appUserId,this.token);\n      }\n    }\n  }\n\n  //this function clears everything if the user clicks logout in the nav bar\n  checkStatus(value){\n    if(value === 'true'){\n      this.userLoggedIn = false;\n      this.appUserId = '';\n      this.token = '';\n      this.userPosts = [];\n    }\n  }\n\n  //this function grabs the obj emitted from the user register process\n  catchRegisterEmit(data){\n    this.userLoggedIn = true;\n    this.appUserId = data._id\n    this.token = data.token;\n  }\n\n  //this function grabs the obj emitted from the user login process\n  catchLoginEmit(data){\n    this.userLoggedIn = true;\n    this.appUserId = data._id\n    this.token = data.token;\n    this.userPosts = data.posts;\n  }\n\n  retrieveThePosts(id,token){\n    this.postService.retrievePosts(id,token)\n      .subscribe(response => {\n        if(response['posts']){\n          this.userPosts = JSON.parse(response['posts']);\n        }\n      });\n  }\n\n}\n","<div>\n    <app-navbar (logoutStatus)=\"checkStatus($event)\" [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <div *ngIf=\"userLoggedIn; else authenticate\">\n        <app-post-grid [ngClass]=\"{'post-grid': true}\" [idOfUser]=\"appUserId\" [posts]=\"userPosts\" [token]=\"token\"></app-post-grid>\n    </div>\n    <ng-template #authenticate>\n        <app-auth (idToEmit)=\"catchRegisterEmit($event)\" (idWithPosts)=\"catchLoginEmit($event)\"></app-auth>\n    </ng-template>\n</div>","import { Component, OnChanges, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnChanges {\n\n  @Input() loadingData: boolean;\n\n  isLoading: boolean = false;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.isLoading = changes['loadingData'].currentValue;\n  }\n\n}\n","<div *ngIf=\"isLoading\" [ngStyle]=\"{'width': '100%', 'justify-self': 'center'}\">\n    <h1 [ngStyle]=\"{ 'color': '#000000','text-align': 'center'}\">Loading...</h1>\n</div>","import { Component, OnChanges, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnChanges {\n\n  @Input() loggedIn: boolean;\n  @Input() id: string;\n  @Input() userToken: string;\n\n  @Output() logoutStatus: EventEmitter<any> = new EventEmitter();\n\n  userStatus: boolean;\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private router: Router) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if(this.id !== undefined){\n      if(changes['id'].currentValue !== ''){\n        this.userStatus = true;\n        this.appUserId = changes['id'].currentValue;\n        this.token = changes['userToken'].currentValue;\n      }else{\n        this.userStatus = false;\n      }\n    }else{\n      this.userStatus = false;\n    }\n  }\n\n  logOut(){\n    this.appUserId = '';\n    this.token = '';\n    this.logoutStatus.emit('true');\n  }\n\n  login(){\n    this.router.navigate(['/dashboard',this.appUserId,this.token]);\n  }\n\n}\n","<nav [ngClass]=\"{'navbar': true}\">\n    <!--This is the container for the links-->\n    <div [ngClass]=\"{'navbar-link-container': true}\">\n       <div *ngIf=\"userStatus; else dashboardPage\" [ngClass]=\"{'nav-item': true}\">\n            <a [routerLink]=\"['/dasboard',id,token]\" [ngClass]=\"{'nav-link': true}\">Dashboard</a>\n        </div>\n        <ng-template #dashboardPage>\n            <div [ngClass]=\"{'nav-item': true}\">\n                <a [routerLink]=\"['/']\" [ngClass]=\"{'nav-link': true}\">Home</a>\n            </div>\n        </ng-template>\n        <div [ngClass]=\"{'nav-item': true}\">\n            <a [routerLink]=\"['/about',id,token]\" [ngClass]=\"{'nav-link': true}\">About</a>\n        </div>\n    </div>\n\n    <!--This is the logout/login button-->\n    <button *ngIf=\"userStatus; else loginButton\" (click)=\"logOut()\" [ngClass]=\"{'logout-btn': true}\">Logout</button>\n    <ng-template #loginButton>\n       <button (click)=\"login()\" [ngClass]=\"{'logout-btn': true}\">Login</button> \n    </ng-template>\n</nav>","import { Component, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Post } from 'src/app/models/Post';\nimport { PostService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-post-grid',\n  templateUrl: './post-grid.component.html',\n  styleUrls: ['./post-grid.component.css']\n})\nexport class PostGridComponent implements OnChanges {\n\n  @Input() posts: Post[];\n  @Input() idOfUser: string;\n  @Input() token: string;\n\n  userId: string;\n  addIsClicked: boolean;\n  userPosts: Post[];\n  userToken: string;\n  numberOfPosts: number;\n\n  //references to the add form input fields\n  postTitle: string;\n  postBody: string;\n\n  constructor(private postService: PostService) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    /*\n    once the posts are received in the app component onChanges should fire so that they can be\n    rendered in this component\n    */\n   this.userId = changes['idOfUser'].currentValue;\n   if(changes['token'].previousValue !== changes['token'].currentValue){\n     //sets the token once the user is authenticaed via register or login\n     this.userToken = changes['token'].currentValue;\n   }\n\n   //map through the posts and set an id to each post object in the array\n   let postCounter = 0;\n   this.userPosts = changes['posts'].currentValue.map(post => {\n      post.id = postCounter;\n      postCounter += 1;\n   });\n\n   //set the post list number for the post item input\n   this.numberOfPosts = this.userPosts.length;\n  }\n\n  deleteSpecificPost(specificPostId: number){\n    /*\n    create a new array and filter the post by the id and pass along the createdAt string to\n    the backend\n\n    the index will be emitted back if the delete button is clicked from the post-item component\n    as the id which was passed in from the post grid component\n    */\n\n    let createdAt = this.posts[specificPostId - 1].createdAt;\n    let newArray = this.posts.filter(post => post.id !== specificPostId);\n\n    //set this array to the posts array to update the ui\n    this.posts = newArray;\n\n    //pass this array along with the createdAt string of post being deleted to the backend\n    let deleteObj = JSON.stringify({\n      createdAt: createdAt\n    });\n\n    //send this json object to the delete method in the post service\n    this.postService.deletePost(this.userId,deleteObj,this.userToken)\n      .subscribe(response => {\n        if(response['msg'] !== 'success'){\n          console.log('post was not deleted in the server');\n        }\n      });\n  }\n\n  //delete all posts method\n  deleteEveryPost(){\n    this.userPosts = [];\n    this.postService.deleteAllPosts(this.userId,this.userToken)\n      .subscribe(response => {\n        if(response['msg'] !== 'success'){\n          console.log('all posts were not deleted');\n        }\n      });\n  }\n\n  addThePost(data){\n    //make the form invisible again\n    this.addIsClicked = false;\n    let tempArray: string[] = [];\n\n    if(!data.postTitle || !data.postBody){\n      tempArray.push('app fields must be entered');\n    }\n\n    if(data.postTitle.length < 3){\n      tempArray.push('title must be greater than 3 characters');\n    }\n\n    if(data.postTitle.length > 60){\n      tempArray.push('title must be less than 60 characters');\n    }\n\n    if(data.postBody.length < 3){\n      tempArray.push('body must be greater than 3 characters');\n    }\n\n    if(data.postBody.length > 400){\n      tempArray.push('body must be less than 400 characters');\n    }\n\n    if(tempArray.length === 0){\n      let newPost = new Post();\n      let tempTime = new Date();\n      newPost.id = this.userPosts.length + 1;\n      newPost.title = data.postTitle;\n      newPost.body = data.postBody;\n      newPost.createdAt = tempTime;\n      newPost.updatedAt = tempTime;\n\n      //add the post to the ui with the added post at the beginning\n      this.userPosts.unshift(newPost);\n\n      //call the add post method from the post service\n      let dataJson = JSON.stringify({post: newPost});\n\n      this.postService.addPost(this.userId,dataJson,this.userToken)\n        .subscribe(response => {\n          if(response['msg'] !== 'success'){\n            console.log('post was not added to the database');\n          }\n        });\n    }\n  }\n\n  showAddForm(){\n    this.addIsClicked = true;\n  }\n}\n","<div>\n    <div [ngClass]=\"{'post-grid-header': true}\">Posts</div>\n\n    <!--This is the add post form-->\n    <form #addPostForm=\"ngForm\" *ngIf=\"addIsClicked\" [ngClass]=\"{'add-post-form': true}\" \n    method=\"POST\" (ngSubmit)=\"addThePost(addPostForm.value)\">\n        <input [ngClass]=\"{'add-post-form-input': true}\" type=\"text\" name=\"postTitle\" [(ngModel)]=\"postTitle\" placeholder=\"Title of post\">\n        <textarea [ngClass]=\"{'add-post-form-input': true}\" name=\"postBody\" \n        cols=\"20\" rows=\"10\" [(ngModel)]=\"postBody\" placeholder=\"Enter post here\"></textarea>\n        <button type=\"submit\" [ngClass]=\"{'add-post-form-btn': true}\">Add Post</button>\n    </form>\n\n    <!--These are the delete all and add post buttons-->\n    <div [ngClass]=\"{'post-grid-btn-container': true}\">\n    <button [ngClass]=\"{'delete-all-btn': true}\" (click)=\"deleteEveryPost()\">Delete All Posts</button>\n    <button [ngClass]=\"{'add-post-btn': true}\" (click)=\"showAddForm()\">Add Post</button>\n    </div>\n\n    <!--This is the post grid-->\n    <div [ngClass]=\"{'grid-post': true}\">\n        <app-post-item [ngClass]=\"{'grid-post-item': true}\" *ngFor=\"let post of userPosts; index as i\" \n        [attr.data-index]=\"i\" [key]=\"i\" [post]=\"post\" [postNum]=\"numberOfPosts\" \n        (deletePost)=\"deleteSpecificPost($event)\"></app-post-item>\n    </div>\n</div>","import { Component, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Post } from 'src/app/models/Post';\n\n@Component({\n  selector: 'app-post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.css']\n})\nexport class PostItemComponent implements OnChanges {\n\n  //inputs from the post grid component\n  @Input() key: number;\n  @Input() post: Post;\n  @Input() postNum: number;\n\n  //this emits the id to the post grid which contains the post array\n  @Output() deletePost: EventEmitter<number> = new EventEmitter();\n\n  preview: string;\n  postId: number;\n  title: string;\n  postBody: string;\n  postNotNull: boolean;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //check if the post is null\n    if(this.post){\n      if(changes['post'].currentValue.title !== null && changes['post'].currentValue.title !== ''){\n        this.postNotNull = true;\n      }\n    }\n\n    //if the post is not null then set everything\n    if(this.postNotNull){\n      if(changes['postNum'].previousValue !== changes['postNum'].currentValue){\n        //sets post body to preview if the body text is too long\n        if(changes['post'].currentValue.body.length > 50){\n          let part = changes['post'].currentValue.body.subString(0,47);\n          this.preview = part + '...';\n        }else{\n          this.preview = changes['post'].currentValue.body;\n        }\n\n        //if the post id is changed update it\n        if(changes['key'].previousValue !== changes['key'].currentValue){\n          this.postId = changes['key'].currentValue;\n        }\n\n        //post title\n        this.title = changes['post'].currentValue.title;\n      }\n    }\n  }\n\n  deleteThisPost(){\n    this.deletePost.emit(this.postId);\n  }\n\n}\n","<div *ngIf=\"postNotNull\" [ngClass]=\"{'post-container': true}\">\n    <div [ngClass]=\"{'post-header': true}\">\n        <button [ngClass]=\"{'post-delete': true}\" (click)=\"deleteThisPost()\">&times;</button>\n        <span [ngClass]=\"{'post-title': true}\">{{title}}</span> \n    </div>\n    <p [ngClass]=\"{'post-body': true}\">{{postBody}}</p>\n</div>","export class Post{\r\n    id: number;\r\n    title:string;\r\n    body: string;\r\n    updatedAt: Date;\r\n    createdAt: Date;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  uploadRegisterUser(data):Observable<any>{\n    return this.http.post<any>('/api/auth/register',data,{headers: this.headers});\n  }\n\n  logUserIn(data):Observable<any>{\n    return this.http.post<any>('/api/auth/login',data,{headers: this.headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  retrievePostUrl: string = '/api/posts/retrieve';\n  addPostUrl: string = '/api/posts/add';\n  deletePostUrl: string = '/api/posts/delete';\n  deleteAllPostsUrl: string = '/api/posts/deleteall';\n\n  headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  //retrieve all the posts\n  retrievePosts(userId,token):Observable<any>{\n    let newHeaders = new HttpHeaders({\n      'x-auth-token': token\n    });\n\n    return this.http.post<any>(`${this.retrievePostUrl}/${userId}`,{headers: newHeaders});\n  }\n\n  //delete a specific post\n  deletePost(userId,data,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.deletePostUrl}/${userId}`,data,{headers: newHeaders});\n  }\n\n  //delete all posts\n  deleteAllPosts(userId,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.deleteAllPostsUrl}/${userId}`,null,{headers: newHeaders});\n  }\n\n  //add a post\n  addPost(userId,dataObj,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.addPostUrl}/${userId}`,dataObj,{headers: newHeaders});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}