{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/auth/auth.component.ts","webpack:///src/app/components/auth/auth.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home-page/home-page.component.ts","webpack:///src/app/components/home-page/home-page.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/loading/loading.component.ts","webpack:///src/app/components/loading/loading.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/post-grid/post-grid.component.ts","webpack:///src/app/components/post-grid/post-grid.component.html","webpack:///src/app/components/post-item/post-item.component.ts","webpack:///src/app/components/post-item/post-item.component.html","webpack:///src/app/models/Post.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/post.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutComponent","route","router","appUserId","token","snapshot","paramMap","get","length","userLoggedIn","value","navigate","checkStatus","AuthComponent","authService","idToEmit","idWithPosts","alreadyUser","loadingData","loginData","loginEmail","loginPassword","loginObj","email","password","loginJson","JSON","stringify","logUserIn","subscribe","resObj","emit","registerData","registerObj","name","registerName","registerEmail","registerPassword","registerJson","uploadRegisterUser","FooterComponent","HomePageComponent","HomeComponent","postService","undefined","retrieveThePosts","userPosts","data","_id","posts","retrievePosts","response","parse","LoadingComponent","isLoading","changes","currentValue","NavbarComponent","logoutStatus","userStatus","PostGridComponent","userId","previousValue","userToken","postCounter","map","post","numberOfPosts","specificPostId","createdAt","newArray","filter","deleteObj","deletePost","console","log","deleteAllPosts","addIsClicked","tempArray","postTitle","postBody","push","newPost","tempTime","Date","body","updatedAt","unshift","dataJson","addPost","deleteEveryPost","showAddForm","PostItemComponent","postNotNull","part","subString","preview","postId","Post","AuthService","http","headers","providedIn","PostService","retrievePostUrl","addPostUrl","deletePostUrl","deleteAllPostsUrl","newHeaders","append","dataObj","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from \"./components/about/about.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { HomePageComponent } from \"./components/home-page/home-page.component\";\n\n\nconst routes: Routes = [{path: '',component: HomePageComponent},\n{path: 'dashboard/:id/:token',component: HomeComponent},\n{path: 'about/:id/:token',component: AboutComponent},\n{path: '*',redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div>\n  <router-outlet></router-outlet>\n  <app-footer [ngClass]=\"{'footer-home': true}\"></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { PostGridComponent } from './components/post-grid/post-grid.component';\nimport { PostItemComponent } from './components/post-item/post-item.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    AuthComponent,\n    FooterComponent,\n    HomeComponent,\n    HomePageComponent,\n    LoadingComponent,\n    NavbarComponent,\n    PostGridComponent,\n    PostItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  userLoggedIn: boolean;\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private route: ActivatedRoute,private router: Router) { }\n\n  ngOnInit(): void {\n    if(this.route.snapshot.paramMap.get('id').length < 2){\n      this.userLoggedIn = false;\n    }else{\n      this.userLoggedIn = true;\n      this.appUserId = this.route.snapshot.paramMap.get('id');\n      this.token = this.route.snapshot.paramMap.get('token');\n    }\n  }\n\n  //this function clears everything if the user clicks logout in the nav bar\n  checkStatus(value){\n    if(value === 'true'){\n      this.userLoggedIn = false;\n      this.appUserId = '';\n      this.token = '';\n\n      //redirect to the home page\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div>\n    <app-navbar (logoutStatus)=\"checkStatus($event)\" [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <header [ngClass]=\"{'about-header': true}\">\n        <h1 [ngClass]=\"{'about-title': true}\">About</h1>\n    </header>\n    <p [ngClass]=\"{'about-body': true}\">Grid Post is a web app that lets users see posts they make in a grid format.</p>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  @Output() idToEmit: EventEmitter<any> = new EventEmitter();\n  @Output() idWithPosts: EventEmitter<any> = new EventEmitter();\n\n  alreadyUser: boolean;\n  loadingData: boolean;\n\n  //references to form input fields\n\n  //login form\n  loginEmail: string;\n  loginPassword: string;\n\n  //register form\n  registerName: string;\n  registerEmail: string;\n  registerPassword: string;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    //this is true by default to show the login form first\n    this.alreadyUser = true;\n    this.loadingData = false;\n  }\n\n  onLoginSubmit(loginData){\n    //set the data to an object and call the logUserIn authService method\n    if(loginData.loginEmail && loginData.loginPassword){\n      //set the data to an object and call the logUserIn authService method\n      const loginObj = {\n        email: loginData.loginEmail,\n        password: loginData.loginPassword\n      }\n\n      const loginJson = JSON.stringify(loginObj);\n      this.loadingData = true;\n      this.authService.logUserIn(loginJson)\n        .subscribe(resObj => {\n          //emit the id up to the home component\n          this.idWithPosts.emit(resObj);\n          this.loadingData = false;\n        });\n    }\n  }\n\n  onRegisterSubmit(registerData){\n    //set the data to an object and call the uploadRegisterUser authService method\n    const registerObj = {\n      name: registerData.registerName,\n      email: registerData.registerEmail,\n      password: registerData.registerPassword\n    };\n\n    const registerJson = JSON.stringify(registerObj);\n    this.loadingData = true;\n    this.authService.uploadRegisterUser(registerJson)\n      .subscribe(resObj => {\n        //emit the id up to the home component\n        this.idToEmit.emit(resObj);\n        this.loadingData = false;\n      });\n  }\n\n  switchForms(){\n    //toggles the alreadyUser boolean to switch the login and register forms via user click\n    this.alreadyUser = !this.alreadyUser;\n  }\n\n}\n","<div>\n    <div [ngClass]=\"{'app-form-container': true}\" *ngIf=\"alreadyUser; else newUser\">\n        <h2 [ngStyle]=\"{'text-align': 'center','color': '#000000','margin-bottom': '0.8rem'}\">Login</h2>\n        <!--login form-->\n        <form #userLogin=\"ngForm\" method=\"POST\" (ngSubmit)=\"onLoginSubmit(userLogin.value)\" [ngClass]=\"{'app-form': true}\">\n            <input type=\"email\" name=\"loginEmail\" [(ngModel)]=\"loginEmail\"\n                placeholder=\"Email\" [ngClass]=\"{'app-form-input': true}\">\n\n             <input type=\"password\" name=\"loginPassword\" [(ngModel)]=\"loginPassword\"\n                placeholder=\"Password\" [ngClass]=\"{'app-form-input': true}\">\n\n            <button type=\"submit\" [ngClass]=\"{'app-form-button': true}\">Login</button>\n        </form>\n        <button #registerButton (click)=\"switchForms()\" [ngClass]=\"{'app-form-button-register': true}\">Register</button>\n    </div>\n    <ng-template #newUser>\n        <div [ngClass]=\"{'app-form-container': true}\">\n            <h2 [ngStyle]=\"{'text-align': 'center','color': '#000000','margin-bottom': '0.8rem'}\">Register</h2>\n            <!--register form-->\n            <form #userRegister=\"ngForm\" method=\"POST\" (ngSubmit)=\"onRegisterSubmit(userRegister.value)\" [ngClass]=\"{'app-form': true}\">\n                <input type=\"text\" name=\"registerName\" [(ngModel)]=\"registerName\"\n                    placeholder=\"First Name\" [ngClass]=\"{'app-form-input': true}\">\n\n                <input type=\"email\" name=\"registerEmail\" [(ngModel)]=\"registerEmail\"\n                    placeholder=\"Email\" [ngClass]=\"{'app-form-input': true}\">\n\n                <input type=\"password\" name=\"registerPassword\" [(ngModel)]=\"registerPassword\"\n                    placeholder=\"Password\" [ngClass]=\"{'app-form-input': true}\">\n\n                <button type=\"submit\" [ngClass]=\"{'app-form-button': true}\">Register</button>\n            </form>\n            <button (click)=\"switchForms()\" [ngClass]=\"{'app-form-button-login': true}\">Login</button>\n        </div>\n    </ng-template>\n    <app-loading [loadingData]=\"loadingData\" [ngStyle]=\"{'margin-top': '0.8rem'}\"></app-loading>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer [ngClass]=\"{'footer': true}\">\n    <p [ngClass]=\"{'footer-text': true}\">&copy; Jamar</p>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  appUserId: string = '';\n  token: string = '';\n  userLoggedIn: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <app-navbar [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <h1 [ngClass]=\"{'home-page': true}\">Welcome to the home page!</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Post} from '../../models/Post';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userLoggedIn: boolean;\n  userPosts: Post[];\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private route: ActivatedRoute,private postService: PostService) { }\n\n  ngOnInit(): void {\n    if(this.route.snapshot.paramMap.get('id') !== undefined){\n      if(this.route.snapshot.paramMap.get('id').length < 2){\n        this.userLoggedIn = false;\n      }else{\n        this.userLoggedIn = true;\n        this.appUserId = this.route.snapshot.paramMap.get('id');\n        this.token = this.route.snapshot.paramMap.get('token');\n\n        //retrieve the posts\n        this.retrieveThePosts(this.appUserId,this.token);\n      }\n    }\n  }\n\n  //this function clears everything if the user clicks logout in the nav bar\n  checkStatus(value){\n    if(value === 'true'){\n      this.userLoggedIn = false;\n      this.appUserId = '';\n      this.token = '';\n      this.userPosts = [];\n    }\n  }\n\n  //this function grabs the obj emitted from the user register process\n  catchRegisterEmit(data){\n    this.userLoggedIn = true;\n    this.appUserId = data._id\n    this.token = data.token;\n  }\n\n  //this function grabs the obj emitted from the user login process\n  catchLoginEmit(data){\n    this.userLoggedIn = true;\n    this.appUserId = data._id\n    this.token = data.token;\n    this.userPosts = data.posts;\n  }\n\n  retrieveThePosts(id,token){\n    this.postService.retrievePosts(id,token)\n      .subscribe(response => {\n        if(response['posts']){\n          this.userPosts = JSON.parse(response['posts']);\n        }\n      });\n  }\n\n}\n","<div>\n    <app-navbar (logoutStatus)=\"checkStatus($event)\" [loggedIn]=\"userLoggedIn\"\n        [id]=\"appUserId\" [userToken]=\"token\"></app-navbar>\n    <div *ngIf=\"userLoggedIn; else authenticate\">\n        <app-post-grid [ngClass]=\"{'post-grid': true}\" [idOfUser]=\"appUserId\" [posts]=\"userPosts\" [token]=\"token\"></app-post-grid>\n    </div>\n    <ng-template #authenticate>\n        <app-auth (idToEmit)=\"catchRegisterEmit($event)\" (idWithPosts)=\"catchLoginEmit($event)\"></app-auth>\n    </ng-template>\n</div>","import { Component, OnChanges, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnChanges {\n\n  @Input() loadingData: boolean;\n\n  isLoading: boolean = false;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.isLoading = changes['loadingData'].currentValue;\n  }\n\n}\n","<div *ngIf=\"isLoading\" [ngStyle]=\"{'width': '100%', 'justify-self': 'center'}\">\n    <h1 [ngStyle]=\"{ 'color': '#000000','text-align': 'center'}\">Loading...</h1>\n</div>","import { Component, OnChanges, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnChanges {\n\n  @Input() loggedIn: boolean;\n  @Input() id: string;\n  @Input() userToken: string;\n\n  @Output() logoutStatus: EventEmitter<any> = new EventEmitter();\n\n  userStatus: boolean;\n  appUserId: string = '';\n  token: string = '';\n\n  constructor(private router: Router) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if(this.id !== undefined){\n      if(changes['id'].currentValue !== ''){\n        this.userStatus = true;\n        this.appUserId = changes['id'].currentValue;\n        this.token = changes['userToken'].currentValue;\n      }else{\n        this.userStatus = false;\n      }\n    }else{\n      this.userStatus = false;\n    }\n  }\n\n  logOut(){\n    this.appUserId = '';\n    this.token = '';\n    this.logoutStatus.emit('true');\n  }\n\n  login(){\n    this.router.navigate(['/dashboard',this.appUserId,this.token]);\n  }\n\n}\n","<nav [ngClass]=\"{'navbar': true}\">\n    <!--This is the container for the links-->\n    <div [ngClass]=\"{'navbar-link-container': true}\">\n       <div *ngIf=\"userStatus; else dashboardPage\" [ngClass]=\"{'nav-item': true}\">\n            <a [routerLink]=\"['/dasboard',id,token]\" [ngClass]=\"{'nav-link': true}\">Dashboard</a>\n        </div>\n        <ng-template #dashboardPage>\n            <div [ngClass]=\"{'nav-item': true}\">\n                <a [routerLink]=\"['/']\" [ngClass]=\"{'nav-link': true}\">Home</a>\n            </div>\n        </ng-template>\n        <div [ngClass]=\"{'nav-item': true}\">\n            <a [routerLink]=\"['/about',id,token]\" [ngClass]=\"{'nav-link': true}\">About</a>\n        </div>\n    </div>\n\n    <!--This is the logout/login button-->\n    <button *ngIf=\"userStatus; else loginButton\" (click)=\"logOut()\" [ngClass]=\"{'logout-btn': true}\">Logout</button>\n    <ng-template #loginButton>\n       <button (click)=\"login()\" [ngClass]=\"{'logout-btn': true}\">Login</button> \n    </ng-template>\n</nav>","import { Component, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Post } from 'src/app/models/Post';\nimport { PostService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-post-grid',\n  templateUrl: './post-grid.component.html',\n  styleUrls: ['./post-grid.component.css']\n})\nexport class PostGridComponent implements OnChanges {\n\n  @Input() posts: Post[];\n  @Input() idOfUser: string;\n  @Input() token: string;\n\n  userId: string;\n  addIsClicked: boolean;\n  userPosts: Post[];\n  userToken: string;\n  numberOfPosts: number;\n\n  //references to the add form input fields\n  postTitle: string;\n  postBody: string;\n\n  constructor(private postService: PostService) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    /*\n    once the posts are received in the app component onChanges should fire so that they can be\n    rendered in this component\n    */\n   this.userId = changes['idOfUser'].currentValue;\n   if(changes['token'].previousValue !== changes['token'].currentValue){\n     //sets the token once the user is authenticaed via register or login\n     this.userToken = changes['token'].currentValue;\n   }\n\n   //map through the posts and set an id to each post object in the array\n   let postCounter = 0;\n   this.userPosts = changes['posts'].currentValue.map(post => {\n      post.id = postCounter;\n      postCounter += 1;\n   });\n\n   //set the post list number for the post item input\n   this.numberOfPosts = this.userPosts.length;\n  }\n\n  deleteSpecificPost(specificPostId: number){\n    /*\n    create a new array and filter the post by the id and pass along the createdAt string to\n    the backend\n\n    the index will be emitted back if the delete button is clicked from the post-item component\n    as the id which was passed in from the post grid component\n    */\n\n    let createdAt = this.posts[specificPostId - 1].createdAt;\n    let newArray = this.posts.filter(post => post.id !== specificPostId);\n\n    //set this array to the posts array to update the ui\n    this.posts = newArray;\n\n    //pass this array along with the createdAt string of post being deleted to the backend\n    let deleteObj = JSON.stringify({\n      createdAt: createdAt\n    });\n\n    //send this json object to the delete method in the post service\n    this.postService.deletePost(this.userId,deleteObj,this.userToken)\n      .subscribe(response => {\n        if(response['msg'] !== 'success'){\n          console.log('post was not deleted in the server');\n        }\n      });\n  }\n\n  //delete all posts method\n  deleteEveryPost(){\n    this.userPosts = [];\n    this.postService.deleteAllPosts(this.userId,this.userToken)\n      .subscribe(response => {\n        if(response['msg'] !== 'success'){\n          console.log('all posts were not deleted');\n        }\n      });\n  }\n\n  addThePost(data){\n    //make the form invisible again\n    this.addIsClicked = false;\n    let tempArray: string[] = [];\n\n    if(!data.postTitle || !data.postBody){\n      tempArray.push('app fields must be entered');\n    }\n\n    if(data.postTitle.length < 3){\n      tempArray.push('title must be greater than 3 characters');\n    }\n\n    if(data.postTitle.length > 60){\n      tempArray.push('title must be less than 60 characters');\n    }\n\n    if(data.postBody.length < 3){\n      tempArray.push('body must be greater than 3 characters');\n    }\n\n    if(data.postBody.length > 400){\n      tempArray.push('body must be less than 400 characters');\n    }\n\n    if(tempArray.length === 0){\n      let newPost = new Post();\n      let tempTime = new Date();\n      newPost.id = this.userPosts.length + 1;\n      newPost.title = data.postTitle;\n      newPost.body = data.postBody;\n      newPost.createdAt = tempTime;\n      newPost.updatedAt = tempTime;\n\n      //add the post to the ui with the added post at the beginning\n      this.userPosts.unshift(newPost);\n\n      //call the add post method from the post service\n      let dataJson = JSON.stringify({post: newPost});\n\n      this.postService.addPost(this.userId,dataJson,this.userToken)\n        .subscribe(response => {\n          if(response['msg'] !== 'success'){\n            console.log('post was not added to the database');\n          }\n        });\n    }\n  }\n\n  showAddForm(){\n    this.addIsClicked = true;\n  }\n}\n","<div>\n    <div [ngClass]=\"{'post-grid-header': true}\">Posts</div>\n\n    <!--This is the add post form-->\n    <form #addPostForm=\"ngForm\" *ngIf=\"addIsClicked\" [ngClass]=\"{'add-post-form': true}\" \n    method=\"POST\" (ngSubmit)=\"addThePost(addPostForm.value)\">\n        <input [ngClass]=\"{'add-post-form-input': true}\" type=\"text\" name=\"postTitle\" [(ngModel)]=\"postTitle\" placeholder=\"Title of post\">\n        <textarea [ngClass]=\"{'add-post-form-input': true}\" name=\"postBody\" \n        cols=\"20\" rows=\"10\" [(ngModel)]=\"postBody\" placeholder=\"Enter post here\"></textarea>\n        <button type=\"submit\" [ngClass]=\"{'add-post-form-btn': true}\">Add Post</button>\n    </form>\n\n    <!--These are the delete all and add post buttons-->\n    <div [ngClass]=\"{'post-grid-btn-container': true}\">\n    <button [ngClass]=\"{'delete-all-btn': true}\" (click)=\"deleteEveryPost()\">Delete All Posts</button>\n    <button [ngClass]=\"{'add-post-btn': true}\" (click)=\"showAddForm()\">Add Post</button>\n    </div>\n\n    <!--This is the post grid-->\n    <div [ngClass]=\"{'grid-post': true}\">\n        <app-post-item [ngClass]=\"{'grid-post-item': true}\" *ngFor=\"let post of userPosts; index as i\" \n        [attr.data-index]=\"i\" [key]=\"i\" [post]=\"post\" [postNum]=\"numberOfPosts\" \n        (deletePost)=\"deleteSpecificPost($event)\"></app-post-item>\n    </div>\n</div>","import { Component, OnChanges, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Post } from 'src/app/models/Post';\n\n@Component({\n  selector: 'app-post-item',\n  templateUrl: './post-item.component.html',\n  styleUrls: ['./post-item.component.css']\n})\nexport class PostItemComponent implements OnChanges {\n\n  //inputs from the post grid component\n  @Input() key: number;\n  @Input() post: Post;\n  @Input() postNum: number;\n\n  //this emits the id to the post grid which contains the post array\n  @Output() deletePost: EventEmitter<number> = new EventEmitter();\n\n  preview: string;\n  postId: number;\n  title: string;\n  postBody: string;\n  postNotNull: boolean;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //check if the post is null\n    if(this.post){\n      if(changes['post'].currentValue.title !== null && changes['post'].currentValue.title !== ''){\n        this.postNotNull = true;\n      }\n    }\n\n    //if the post is not null then set everything\n    if(this.postNotNull){\n      if(changes['postNum'].previousValue !== changes['postNum'].currentValue){\n        //sets post body to preview if the body text is too long\n        if(changes['post'].currentValue.body.length > 50){\n          let part = changes['post'].currentValue.body.subString(0,47);\n          this.preview = part + '...';\n        }else{\n          this.preview = changes['post'].currentValue.body;\n        }\n\n        //if the post id is changed update it\n        if(changes['key'].previousValue !== changes['key'].currentValue){\n          this.postId = changes['key'].currentValue;\n        }\n\n        //post title\n        this.title = changes['post'].currentValue.title;\n      }\n    }\n  }\n\n  deleteThisPost(){\n    this.deletePost.emit(this.postId);\n  }\n\n}\n","<div *ngIf=\"postNotNull\" [ngClass]=\"{'post-container': true}\">\n    <div [ngClass]=\"{'post-header': true}\">\n        <button [ngClass]=\"{'post-delete': true}\" (click)=\"deleteThisPost()\">&times;</button>\n        <span [ngClass]=\"{'post-title': true}\">{{title}}</span> \n    </div>\n    <p [ngClass]=\"{'post-body': true}\">{{postBody}}</p>\n</div>","export class Post{\r\n    id: number;\r\n    title:string;\r\n    body: string;\r\n    updatedAt: Date;\r\n    createdAt: Date;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  uploadRegisterUser(data):Observable<any>{\n    return this.http.post<any>('/api/auth/register',data,{headers: this.headers});\n  }\n\n  logUserIn(data):Observable<any>{\n    return this.http.post<any>('/api/auth/login',data,{headers: this.headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  retrievePostUrl: string = '/api/posts/retrieve';\n  addPostUrl: string = '/api/posts/add';\n  deletePostUrl: string = '/api/posts/delete';\n  deleteAllPostsUrl: string = '/api/posts/deleteall';\n\n  headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  //retrieve all the posts\n  retrievePosts(userId,token):Observable<any>{\n    let newHeaders = new HttpHeaders({\n      'x-auth-token': token\n    });\n\n    return this.http.post<any>(`${this.retrievePostUrl}/${userId}`,{headers: newHeaders});\n  }\n\n  //delete a specific post\n  deletePost(userId,data,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.deletePostUrl}/${userId}`,data,{headers: newHeaders});\n  }\n\n  //delete all posts\n  deleteAllPosts(userId,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.deleteAllPostsUrl}/${userId}`,null,{headers: newHeaders});\n  }\n\n  //add a post\n  addPost(userId,dataObj,token):Observable<string>{\n    let newHeaders = this.headers.append('x-auth-token',token);\n    return this.http.post<string>(`${this.addPostUrl}/${userId}`,dataObj,{headers: newHeaders});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}